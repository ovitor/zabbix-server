# this is a configuration file for zabbix server process
# to get more information about zabbix, visit http://www.zabbix.com

############ general parameters #################
### option: listenport
#	listen port for trapper.
#
ListenPort=10051

### option: sourceip
#	source ip address for outgoing connections.
#

### Option: LogType
#	Specifies where log messages are written to:
#		system  - syslog
#		file    - file specified with LogFile parameter
#		console - standard output
#
# Mandatory: no
# Default:
LogType=file

### option: logfile
#	name of log file.
#	if not set, syslog is used.
#
LogFile=/var/log/zabbix/zabbix_server.log

### option: logfilesize
#	maximum size of log file in mb.
#	0 - disable automatic log rotation.
#
LogFileSize=10

### option: debuglevel
#	specifies debug level
#	0 - no debug
#	1 - critical information
#	2 - error information
#	3 - warnings
#	4 - for debugging (produces lots of information)
#
DebugLevel=3

### Option: SocketDir
#	IPC socket directory.
#       Directory to store IPC sockets used by internal Zabbix services.
#
# Mandatory: no
# Default:
# SocketDir=/tmp

SocketDir=/var/run/zabbix

### option: pidfile
#	name of pid file.
#
PidFile=/var/run/zabbix/zabbix_server.pid

### option: dbhost
#	database host name.
#	if set to localhost, socket is used for mysql.
#	if set to empty string, socket is used for postgresql.
#
DBHost={{ zabbix_postgres_host }}

### option: dbname
#	database name.
#	for sqlite3 path to database file must be provided. dbuser and dbpassword are ignored.
#
DBName={{ zabbix_postgres_dbname }}

### option: dbschema
#	schema name. used for ibm db2.
#

### option: dbuser
#	database user. ignored for sqlite.
#
DBUser={{ zabbix_postgres_user }}

### option: dbpassword
#	database password. ignored for sqlite.
#	comment this line if no password is used.
#
DBPassword={{ zabbix_postgres_pass }}

### option: dbsocket
#	path to mysql socket.
#

### option: dbport
#	database port when not using local socket. ignored for sqlite.
#
DBPort={{ zabbix_postgres_port }}

### Option: HistoryStorageURL
#	History storage HTTP[S] URL.
#
# Mandatory: no
# Default:

### Option: HistoryStorageTypes
#	Comma separated list of value types to be sent to the history storage.
#
# Mandatory: no
# Default:
HistoryStorageTypes=uint,dbl,str,log,text

### Option: HistoryStorageDateIndex
#	Enable preprocessing of history values in history storage to store values in different indices based on date.
#	0 - disable
#	1 - enable
#
# Mandatory: no
# Default:
HistoryStorageDateIndex=0

### Option: ExportDir
#	Directory for real time export of events, history and trends in newline delimited JSON format.
#	If set, enables real time export.
#
# Mandatory: no
# Default:

### Option: ExportFileSize
#	Maximum size per export file in bytes.
#	Only used for rotation if ExportDir is set.
#
# Mandatory: no
# Range: 1M-1G
# Default:
ExportFileSize=1G
############ advanced parameters ################

### option: startpollers
#	number of pre-forked instances of pollers.
#
StartPollers=5

### option: startipmipollers
#	number of pre-forked instances of ipmi pollers.
#
StartIPMIPollers=0

### Option: StartPreprocessors
#       Number of pre-forked instances of preprocessing workers.
#               The preprocessing manager process is automatically started when preprocessor worker is started.
#
# Mandatory: no
# Range: 1-1000
# Default:
# StartPreprocessors=3
StartPreprocessors=3

### option: startpollersunreachable
#	number of pre-forked instances of pollers for unreachable hosts (including ipmi).
#
StartPollersUnreachable=1

### option: starttrappers
#	number of pre-forked instances of trappers.
#	trappers accept incoming connections from zabbix sender, active agents, active proxies and child nodes.
#	at least one trapper process must be running to display server availability in the frontend.
#
StartTrappers=5

### option: startpingers
#	number of pre-forked instances of icmp pingers.
#
StartPingers=1

### option: startdiscoverers
#	number of pre-forked instances of discoverers.
#
StartDiscoverers=1

### option: starthttppollers
#	number of pre-forked instances of http pollers.
#
StartHTTPPollers=1

### option: starttimers
#	number of pre-forked instances of timers.
#	timers process time-based trigger functions and maintenance periods.
#	only the first timer process handles the maintenance periods.
#
StartTimers=1

### Option: StartEscalators
#   Number of pre-forked instances of escalators.
#
StartEscalators=1

### option: javagateway
#	ip address (or hostname) of zabbix java gateway.
#	only required if java pollers are started.
#

### option: startvmwarecollectors
#	number of pre-forked vmware collector instances.
#
StartVMwareCollectors=0

### option: vmwarefrequency
#	how often zabbix will connect to vmware service to obtain a new data.
#
VMwareFrequency=60

### Option: VMwarePerfFrequency
#       How often Zabbix will connect to VMware service to obtain performance data.
#
# Mandatory: no
VMwarePerfFrequency=60

### option: vmwarecachesize
#	size of vmware cache, in bytes.
#	shared memory size for storing vmware data.
#	only used if vmware collectors are started.
#
VMwareCacheSize=8M

### Option: VMwareTimeout
#       Specifies how many seconds vmware collector waits for response from VMware service.
#
VMwareTimeout=10

### option: snmptrapperfile
#	temporary file used for passing data from snmp trap daemon to the server.
#	must be the same as in zabbix_trap_receiver.pl or snmptt configuration file.
#
SNMPTrapperFile=/tmp/zabbix_traps.tmp

### option: startsnmptrapper
#	if 1, snmp trapper process is started.
#
StartSNMPTrapper=0

### option: listenip
#	list of comma delimited ip addresses that the trapper should listen on.
#	trapper will listen on all network interfaces if this parameter is missing.
#

### option: housekeepingfrequency
#	How often Zabbix will perform housekeeping procedure (in hours).
#	Housekeeping is removing outdated information from the database.
#	To prevent Housekeeper from being overloaded, no more than 4 times HousekeepingFrequency
#	hours of outdated information are deleted in one housekeeping cycle, for each item.
#	To lower load on server startup housekeeping is postponed for 30 minutes after server start.
#	With HousekeepingFrequency=0 the housekeeper can be only executed using the runtime control option.
#	In this case the period of outdated information deleted in one housekeeping cycle is 4 times the
#	period since the last housekeeping cycle, but not less than 4 hours and not greater than 4 days.
#
HousekeepingFrequency=1

### option: maxhousekeeperdelete
#	The table "housekeeper" contains "tasks" for housekeeping procedure in the format:
#	[housekeeperid], [tablename], [field], [value].
#	No more than 'MaxHousekeeperDelete' rows (corresponding to [tablename], [field], [value])
#	will be deleted per one task in one housekeeping cycle.
#	SQLite3 does not use this parameter, deletes all corresponding rows without a limit.
#	If set to 0 then no limit is used at all. In this case you must know what you are doing!
#
MaxHousekeeperDelete=500


### option: cachesize
#	size of configuration cache, in bytes.
#	shared memory size for storing host, item and trigger data.
#
CacheSize=8M

### option: cacheupdatefrequency
#	how often zabbix will perform update of configuration cache, in seconds.
#
CacheUpdateFrequency=60

### option: startdbsyncers
#	number of pre-forked instances of db syncers
#
StartDBSyncers=4

### option: historycachesize
#	size of history cache, in bytes.
#	shared memory size for storing history data.
#
HistoryCacheSize=8M

### Option: HistoryIndexCacheSize
#       Size of history index cache, in bytes.
#       Shared memory size for indexing history cache.
#
HistoryIndexCacheSize=4M

### option: trendcachesize
#	size of trend cache, in bytes.
#	shared memory size for storing trends data.
#
TrendCacheSize=4M


### option: valuecachesize
#	size of history value cache, in bytes.
#	shared memory size for caching item history data requests
#	setting to 0 disables value cache.
#
ValueCacheSize=8M


### option: timeout
#	specifies how long we wait for agent, snmp device or external check (in seconds).
#
Timeout=3

### option: trappertimeout
#	specifies how many seconds trapper may spend processing new data.
#
TrapperTimeout=300

### option: unreachableperiod
#	after how many seconds of unreachability treat a host as unavailable.
#
UnreachablePeriod=45

### option: unavailabledelay
#	how often host is checked for availability during the unavailability period, in seconds.
#
UnavailableDelay=60

### option: unreachabledelay
#	how often host is checked for availability during the unreachability period, in seconds.
#
UnreachableDelay=15

### option: alertscriptspath
#	full path to location of custom alert scripts.
#	default depends on compilation options.
#
AlertScriptsPath=/usr/lib/zabbix/alertscripts

### option: externalscripts
#	full path to location of external scripts.
#	default depends on compilation options.
#
ExternalScripts=/usr/lib/zabbix/externalscripts

### option: fpinglocation
#	location of fping.
#	make sure that fping binary has root ownership and suid flag set.
#
FpingLocation=/usr/sbin/fping

### option: fping6location
#	location of fping6.
#	make sure that fping6 binary has root ownership and suid flag set.
#	make empty if your fping utility is capable to process ipv6 addresses.
#
Fping6Location=/usr/sbin/fping6

### option: sshkeylocation
#	location of public and private keys for ssh checks and actions.
#

### option: logslowqueries
#	how long a database query may take before being logged (in milliseconds).
#	only works if debuglevel set to 3 or 4.
#	0 - don't log slow queries.
#
LogSlowQueries=0

### option: tmpdir
#	temporary directory.
#
TmpDir=/tmp

### option: startproxypollers
#	number of pre-forked instances of pollers for passive proxies.
#
StartProxyPollers=1

### option: proxyconfigfrequency
#	how often zabbix server sends configuration data to a zabbix proxy in seconds.
#	this parameter is used only for proxies in the passive mode.
#
ProxyConfigFrequency=3600

### option: proxydatafrequency
#	how often zabbix server requests history data from a zabbix proxy in seconds.
#	this parameter is used only for proxies in the passive mode.
#
ProxyDataFrequency=1

### option: allowroot
#	allow the server to run as 'root'. if disabled and the server is started by 'root', the server
#	will try to switch to user 'zabbix' instead. has no effect if started under a regular user.
#	0 - do not allow
#	1 - allow
#
AllowRoot=0

### Option: User
#       Drop privileges to a specific, existing user on the system.
#       Only has effect if run as 'root' and AllowRoot is disabled.
#
User=zabbix

### option: include
#	you may include individual files or all files in a directory in the configuration file.
#	installing zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
# Include=/etc/zabbix/zabbix_server.conf.d

### Option: SSLCertLocation
#       Location of SSL client certificates.
#       This parameter is used only in web monitoring.
#
SSLCertLocation=${datadir}/zabbix/ssl/certs

### Option: SSLKeyLocation
#       Location of private keys for SSL client certificates.
#       This parameter is used only in web monitoring.
#
SSLKeyLocation=${datadir}/zabbix/ssl/keys

### Option: SSLCALocation
#       Override the location of certificate authority (CA) files for SSL server certificate verification.
#       If not set, system-wide directory will be used.
#       This parameter is used only in web monitoring and SMTP authentication.
#

####### loadable modules #######
### option: loadmodulepath
#	full path to location of server modules.
#	default depends on compilation options.
#
LoadModulePath=${libdir}/modules

### option: loadmodule
#	module to load at server startup. modules are used to extend functionality of the server.
#	format: loadmodule=<module.so>
#	the modules must be located in directory specified by loadmodulepath.
#	it is allowed to include multiple loadmodule parameters.
#

####### TLS-RELATED PARAMETERS #######

### Option: TLSCAFile
#	Full pathname of a file containing the top-level CA(s) certificates for
#	peer certificate verification.
#
# Mandatory: no
# Default:

### Option: TLSCRLFile
#	Full pathname of a file containing revoked certificates.
#
# Mandatory: no
# Default:

### Option: TLSCertFile
#	Full pathname of a file containing the server certificate or certificate chain.
#
# Mandatory: no
# Default:

### Option: TLSKeyFile
#	Full pathname of a file containing the server private key.
#
# Mandatory: no
# Default:

### Option: DBTLSConnect
#	Setting this option enforces to use TLS connection to database.
#	required    - connect using TLS
#	verify_ca   - connect using TLS and verify certificate
#	verify_full - connect using TLS, verify certificate and verify that database identity specified by DBHost
#	              matches its certificate
#	On MySQL starting from 5.7.11 and PostgreSQL following values are supported: "required", "verify_ca" and
#	"verify_full".
#	On MariaDB starting from version 10.2.6 "required" and "verify_full" values are supported.
#	Default is not to set any option and behavior depends on database configuration
#
# Mandatory: no
# Default:
# DBTLSConnect=

### Option: DBTLSCAFile
#	Full pathname of a file containing the top-level CA(s) certificates for database certificate verification.
#	Supported only for MySQL and PostgreSQL
#
# Mandatory: no
#	(yes, if DBTLSConnect set to one of: verify_ca, verify_full)
# Default:
# DBTLSCAFile=

### Option: DBTLSCertFile
#	Full pathname of file containing Zabbix proxy certificate for authenticating to database.
#	Supported only for MySQL and PostgreSQL
#
# Mandatory: no
# Default:
# DBTLSCertFile=

### Option: DBTLSKeyFile
#	Full pathname of file containing the private key for authenticating to database.
#	Supported only for MySQL and PostgreSQL
#
# Mandatory: no
# Default:
# DBTLSKeyFile=

### Option: DBTLSCipher
#	The list of encryption ciphers that Zabbix proxy permits for TLS protocols up through TLSv1.2
#	Supported only for MySQL
#
# Mandatory no
# Default:
# DBTLSCipher=

### Option: DBTLSCipher13
#	The list of encryption ciphersuites that Zabbix proxy permits for TLSv1.3 protocol
#	Supported only for MySQL, starting from version 8.0.16
#
# Mandatory no
# Default:
# DBTLSCipher13=
